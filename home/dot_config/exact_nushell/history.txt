help mod
help match
just renew-cert-stg
k
help match
ls -la
ls
ls -h
ls | where type == file
ls -a | where type == file
help
ls -la
ls -la --help
brew upgrade nushell
mise nushell
mise registry | grep nushell
mise registry
mise registry | table
ls -la
config nu
VISUAL="open -a Neovide" config nu
echo $VISUAL
$env.VISUAL
$env.VISUAL = "open -a Neovide"
config nu
which open
open -a Neovide
\open
ls -la
config
config nu
use std/log
log
help log
log info "loves ya"
help log custom
log custom -h
log info -h
log info -s meh
help std log
help log
help std
us estd
use std
help std log
help std/log
help
std log --help
brew bundle check
out = brew bundle check
let out = brew bundle check
out
echo $out
nu
gstat
which gstat
brew info gstat
gstat -h
config nu -h
config nu --default
config un
config env -h
config nu -h
config -h
config reset
open https://nushell.sh/book/configuratin.html#remove-welcome-message
chezmoi status
which chezmoi
chezmoi status
config reset -h
config reset -w
config
config env
config nu
glob --help
glob "code/**/.tmuxp.*"
which pueue
pueue -h
pueue wait
help commands | select name
help commands | explore
config nu
tmux get default-command
tmux set -g default-command
ls -la
nvim
chezmoi edit --apply ~/.config/nvim
nvim
which e
config nu
which nvim
$nu.config-path
$nu.env-path
which nvim
nvim $nu.env-path
$env.VISUAL
nvim $nu.env-path
ls -la
ls | explore
env | explore
$env | explore
help operators 
ls -la | explore
config nu
chezmoi status
cd ~/.config/nushell/
ls
ls config
rm config
rm -r config
ls
ls nu_scripts/
rm nu_scripts/
ls -la
config reset
ls
echo $env.VISUAL
config nu
man tmux
chezmoi edit ~/.config/tmux/
$env.VISUAL
$env.EDITOR
ls
ls -la
wezterm
config nu
$env | explore
ls -la
config nu
$env.EDITOR = "vi"
$env.EDITOR = "vim"
config nu
$env.EDITOR
$env.VISUAL
ls -la | where name starts-with ".z"
bat .zshenv
cat .zshenv
vim .zshenv
mise install
echo $env.PATH
config nu
$env | explore
tmux new -s main -n main
$nu.env-path
config reset
config env
which nvim
$env.EDITOR = (which nvim).0.path
config env
config nu
config env
config nu
chezmoi status
dirs
use std dirs
dirs
dirs add .config
dirs
dirs -h
dirs .config
use std/dirs
dirs add
ls
dirs
dirs add .config
dirs
dirs adddirs
dirs
dirs drop
dirs
which ..
..
cd -
cd -h
which home
alias cd = dirs add
cd .config/wezterm/
ls
dirs
popd
pushd
dirs drop
dirs
dirs add .config
dirs add wezterm/
dirs add ../nvim
dirs
dirs goto 1
dirs goto 
dirs goto 2
dirs drop
dirs
dirs drop -h
"dirs drop" -h
dirs drop --help
dirs drop nth
dirs
dirs drop 1
dirs drop
dirs
dirs drop 1
dirs
dirs -h
dirs next
dirs prev
dirs drop
ls
which pueued
pueue
pueued -d
pueue
pueue clean
pueue
pueue kill
pueue
pueue dequeue
pueue
pueue -h
pueue remove
pueue
pueue remove -h
pueue remove 0
pueue
which cron
cron
crontab -e
$nu.data-dir
$env.NU_LIB_DIRS
overlay list
def "config wezterm" [] {<\n>print "boo"<\n>}
config wezterm 
def "config wezterm" [] {<\n>chezmoi edit --apply ([$env.HOME ".config" "wezterm" "wezterm.lua"] | path join)<\n>}
config wezterm
config
config nu
tmux new -s main -n main
chezmoi edit ~/.config/tmux/040-options.conf
chezmoi status
chezmoi apply
tmux new -s main -n main
$env.EDITOR
$env.SHELL
config nu
config env
cd .config/nushell
ls
rm *.backup
ls
chezmoi status
ls
rm old*
ls
ls nu_scripts
rm -r nu_scripts/
ls
ls scripts
rm- r scripts
rm -r scripts
ls
chezmoi ignore
chezmoi cd
