# Aliases and endpoints for OpenAI compatible REST API.
# LocalAI setup instructions: https://github.com/go-skynet/LocalAI#example-use-gpt4all-j-model
apis:
  openai:
    base-url: https://api.openai.com/v1
    api-key: {{ joinPath .chezmoi.sourceDir ".openai_api_key.age" | include | decrypt }}
    models:
      gpt-4o:
        aliases: ["4o"]
        max-input-chars: 392000
        fallback: gpt-4
      gpt-4:
        aliases: ["4"]
        max-input-chars: 24500
        fallback: gpt-3.5-turbo
      gpt-4-32k:
        aliases: ["32k"]
        max-input-chars: 98000
        fallback: gpt-4
      gpt-3.5-turbo:
        aliases: ["35t"]
        max-input-chars: 12250
        fallback: gpt-3.5
      gpt-3.5:
        aliases: ["35"]
        max-input-chars: 12250
        fallback:
  localai:
    base-url: http://localhost:8080
    models:
      ggml-gpt4all-j:
        aliases: ["local", "4all"]
        max-input-chars: 12250
        fallback:
  anthropic:
    base-url: https://api.anthropic.com/v1
    api-key:
    api-key-env: ANTHROPIC_API_KEY
    models: # https://docs.anthropic.com/en/docs/about-claude/models
      claude-3-5-sonnet-latest:
        aliases:
          ["claude3.5-sonnet", "claude-3-5-sonnet", "sonnet-3.5", "sonnet"]
        max-input-chars: 680000
      claude-3-5-sonnet-20241022:
        max-input-chars: 680000
      claude-3-5-sonnet-20240620:
        max-input-chars: 680000
      claude-3-opus-20240229:
        aliases: ["claude3-opus", "opus"]
        max-input-chars: 680000
# Default model (gpt-3.5-turbo, gpt-4, ggml-gpt4all-j...).
default-model: gpt-4o
# Default character limit on input to model.
max-input-chars: 12250
# Format response as markdown.
format: false
# Quiet mode (hide the spinner while loading).
quiet: false
# Temperature (randomness) of results, from 0.0 to 2.0.
temp: 1.0
# TopP, an alternative to temperature that narrows response, from 0.0 to 1.0.
topp: 1.0
# Turn off the client-side limit on the size of the input into the model.
no-limit: false
# Include the prompt from the arguments in the response.
include-prompt-args: false
# Include the prompt from the arguments and stdin, truncate stdin to specified number of lines.
include-prompt: 0
# Maximum number of times to retry API calls.
max-retries: 5
# Number of cycling characters in the 'generating' animation.
fanciness: 10
# Text to show while generating.
status-text: Generating
# Maximum number of tokens in response.
# max-tokens: 100
roles:
  shell:
    - you are a shell expert
    - you do not explain anything
    - you simply output one liners to solve the problems you're asked
    - you do not provide any explanation whatsoever, ONLY the command
  coder:
    - you are an expert software developer
    - you write clean, efficient, well-documented code
    - you follow best practices and design patterns
    - you consider edge cases and error handling
    - you explain your code changes clearly and concisely
  sql:
    - you are an expert SQL developer
    - you write optimized SQL queries
    - you consider query performance and indexing
    - you provide only the SQL code without explanation
  git:
    - you are a git expert
    - you provide git commands to solve version control problems
    - you know advanced git features and best practices
    - you provide only the git commands without explanation
  docker:
    - you are a Docker and container expert
    - you provide Dockerfile and docker-compose solutions
    - you know container orchestration and best practices
    - you focus on security and optimization
  security:
    - you are a cybersecurity expert
    - you focus on identifying security vulnerabilities
    - you provide secure coding practices and fixes
    - you consider OWASP guidelines and common attack vectors
  reviewer:
    - you are a senior code reviewer
    - you analyze code for bugs, performance issues, and anti-patterns
    - you suggest improvements while being constructive
    - you focus on maintainability and readability
  architect:
    - you are a software architect
    - you provide high-level system design solutions
    - you consider scalability, maintainability, and performance
    - you follow SOLID principles and design patterns
