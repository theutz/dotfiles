# vim: fdm=marker fdl=0 fmr=\ »»»,\ ««« cms=\ #\ %s

{{- define "workspace-by-name" }}
{{- $index := jq (print "map(.name == \"" .name "\") | index(true)") .workspaces }}
{{- $name := jq (print "map(select(.name == \"" .name "\")) | first | .name") .workspaces }}
{{- $index | first | add 1 }}-{{ $name | first }}
{{- end }}
start-at-login                                                  = true
after-startup-command                                           = [
  'exec-and-forget {{ (includeTemplate "borders/main.tmpl" .) | trim }}',
  'exec-and-forget sketchybar --reload'
]
exec-on-workspace-change = [
  '/bin/bash', '-c', 'sketchybar --trigger aerospace_workspace_change FOCUSED=$AEROSPACE_FOCUSED_WORKSPACE'
]
enable-normalization-flatten-containers                         = true
enable-normalization-opposite-orientation-for-nested-containers = true
accordion-padding                                               = 32
default-root-container-layout                                   = 'tiles'
default-root-container-orientation                              = 'auto'
key-mapping.preset                                              = 'qwerty'

[gaps]
{{ $gap := 16 -}}
{{- range (list
  "inner.horizontal"
  "inner.vertical"
  "outer.left"
  "outer.bottom"
  "outer.right"
) }}
{{ . }} = {{ $gap }}
{{- end }}
outer.top = {{ add $gap 40 }}

[exec]

inherit-env-vars = true

[exec.env-vars]

PATH   = '/opt/homebrew/bin:/opt/homebrew/sbin:${PATH}'
EDITOR = 'neovide --fork'
VISUAL = 'neovide --fork'

[workspace-to-monitor-force-assignment]
{{ range $v := .workspaces }}
{{ template "workspace-by-name" (deepCopy $ | merge (dict "name" $v.name))}} = {{ $v.monitor | quote }}
{{- end }}

# Callbacks
# run `aerospace list-apps` to see all current app ids
{{- range $v := (list
  "net.mullvad.vpn"
  "com.macpaw.CleanMyMac-setapp"
  "org.hammerspoon.Hammerspoon"
  "com.fivegencare.com.motorola.nursery"
  "com.xiaomi.mihome")
}}
{{- with (deepCopy $ | merge (dict "name" "utils")) }}

[[on-window-detected]]
if.app-id = {{ $v | quote }}
run       = ['layout floating', 'move-node-to-workspace {{ template "workspace-by-name" . }}']

{{- end }}
{{- end }}

{{ with (deepCopy $ | merge (dict "name" "ref")) -}}

[[on-window-detected]]
if.app-id = 'com.kapeli.dashdoc'
run       = 'move-node-to-workspace {{ template "workspace-by-name" . }}'
{{- end }}

{{- range $v := (list
  "ru.keepcoder.Telegram"
  "net.whatsapp.WhatsApp"
  "com.apple.MobileSMS"
) }}
{{- with (deepCopy $ | merge (dict "name" "chat")) }}

[[on-window-detected]]
if.app-id = {{ $v | quote }}
run       = 'move-node-to-workspace {{ template "workspace-by-name" . }}'
{{- end }}
{{- end }}

{{- with (deepCopy . | merge (dict "name" "spotify")) }}

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run       = 'move-node-to-workspace {{ template "workspace-by-name" . }}'
{{- end }}

{{- with (deepCopy . | merge (dict "name" "slack")) }}

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run       = 'move-node-to-workspace {{ template "workspace-by-name" . }}'
{{- end }}

{{- with (deepCopy . | merge (dict "name" "zoom")) }}

[[on-window-detected]]
if.app-id = 'us.zoom.xos'
run       = 'move-node-to-workspace {{ template "workspace-by-name" . }}'
{{- end }}

# Keybinding Reference
# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented

[mode.main.binding]

f13 = [
  'mode normal',
  'exec-and-forget {{ (includeTemplate "borders/normal.tmpl" .) | trim }}',
  'exec-and-forget sketchybar --trigger aerospace_mode_change MODE=normal'
]

[mode.edit.binding]

esc = [
  'trigger-binding --mode main f13',
  'exec-and-forget sketchybar --trigger aerospace_mode_change MODE=default'
]
a = ['exec-and-forget $VISUAL ~/.config/aerospace/aerospace.toml', 'trigger-binding --mode normal esc']
c = ['exec-and-forget $VISUAL ~/.config',                          'trigger-binding --mode normal esc']
t = ['exec-and-forget $VISUAL ~/.config/tmux/tmux.conf',           'trigger-binding --mode normal esc']
w = ['exec-and-forget $VISUAL ~/.config/wezterm/wezterm.lua',      'trigger-binding --mode normal esc']
v = ['exec-and-forget $VISUAL ~/.config/nvim',                     'trigger-binding --mode normal esc']
z = ['exec-and-forget $VISUAL ~/.zshrc ~/.zprofile',               'trigger-binding --mode normal esc']

[mode.normal.binding]

e = [
  'mode edit',
  'exec-and-forget {{ (includeTemplate "borders/edit.tmpl" .) | trim }}',
  'exec-and-forget sketchybar --trigger aerospace_mode_change MODE=edit'
]
f = "layout floating tiling"
h = 'focus left'
i = 'layout horizontal vertical'
j = 'focus down'
k = 'focus up'
l = 'focus right'
o = 'layout accordion tiles'
r = [
  'exec-and-forget sketchybar --reload',
  'exec-and-forget {{ (includeTemplate "borders/main.tmpl" .) | trim }}',
  'mode main',
  'reload-config',
  'exec-and-forget noti -t aerospace -m "Config reloaded!"',
]
w = [
  'mode workspace',
  'exec-and-forget {{ (includeTemplate "borders/workspace.tmpl" .) | trim }}',
  'exec-and-forget sketchybar --trigger aerospace_mode_change MODE=workspace'
]
x         = 'close --quit-if-last-window'
backslash = 'balance-sizes'
enter     = 'fullscreen'
equal     = 'resize smart +50'
esc       = [
  'mode main',
  'exec-and-forget {{ (includeTemplate "borders/main.tmpl" .) | trim }}',
  'exec-and-forget sketchybar --trigger aerospace_mode_change MODE=main'
]
leftSquareBracket   = 'workspace --wrap-around prev'
minus               = 'resize smart -50'
rightSquareBracket  = 'workspace --wrap-around next'
semicolon           = 'focus-monitor --wrap-around next'

alt-h                  = 'join-with left'
alt-j                  = 'join-with down'
alt-k                  = 'join-with up'
alt-l                  = 'join-with right'
alt-semicolon          = 'move-node-to-monitor --wrap-around next'
alt-leftSquareBracket  = 'move-node-to-workspace --wrap-around prev'
alt-rightSquareBracket = 'move-node-to-workspace --wrap-around next'

shift-h = 'move left'
shift-j = 'move down'
shift-k = 'move up'
shift-l = 'move right'
shift-semicolon          = [ 'trigger-binding --mode normal alt-semicolon',          'focus-monitor --wrap-around next' ]
shift-leftSquareBracket  = [ 'trigger-binding --mode normal alt-leftSquareBracket',  'workspace --wrap-around prev' ]
shift-rightSquareBracket = [ 'trigger-binding --mode normal alt-rightSquareBracket', 'workspace --wrap-around next' ]

[mode.workspace.binding]

esc       = [
  'mode normal',
  'exec-and-forget {{ (includeTemplate "borders/normal.tmpl" .) | trim }}',
  'exec-and-forget sketchybar --trigger aerospace_mode_change MODE=normal'
]
{{ range $i, $v := .workspaces }}
{{- $index := (add 1 $i) }}
{{- $name := (printf "%d-%s" $index $v.name)}}
{{ $v.shortcut }} = [
  'workspace {{ $name }}',
  'trigger-binding --mode workspace esc'
]
alt-{{ $v.shortcut }} = [
  'move-node-to-workspace {{ $name }}',
  'trigger-binding --mode workspace esc'
]
shift-{{ $v.shortcut }} = [
  'move-node-to-workspace {{ $name }}',
  'trigger-binding --mode workspace {{ $v.shortcut }}',
  'trigger-binding --mode workspace esc'
]
{{ end }}
