# Tmux Configuration

# Plugins »»»
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-yank'

if "test ! -d #{d:current_file}/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm #{d:current_file}/plugins/tpm && #{d:current_file}/plugins/tpm/bin/install_plugins'"
run "#{d:current_file}/plugins/tpm/tpm"
#  «««

# Colors »»»
set -g @bg "terminal"
set -g @fg "colour15"
set -g @success "colour2"
set -g @warning "colour3"
set -g @error "colour1"
set -g @inactive "colour0"
{{ if eq .chezmoi.os "darwin" }}
set -g @active "colour11"
set -g @session "colour13"
set -g @window "colour5"
set -g @pane "colour5"
{{ else }}
set -g @active "colour2"
set -g @session "colour12"
set -g @window "colour10"
set -g @pane "colour10"
{{ end }}
#  «««

# Options »»»
set -g aggressive-resize on
set -g allow-passthrough all
set -g automatic-rename-format "#{?pane_in_mode,[tmux],󰎔}"
set -g base-index 1
set -g command-alias[100] vsp="split-window -h"
set -g command-alias[101] sp="split-window -v"
set -g command-alias[1450] is-pane-dead='run "[[ $(tmux display -p \"#{pane_dead}\") == 1 ]]"'
set -g command-alias[20548] mods='splitw -hbl 80 mods'
set -g command-alias[29547] man='splitw -hbl 80 ''; set -p remain-on-exit off; respawnp -k man tmux'
set -g copy-mode-current-match-style 'bg=colour1 fg=colour7'
set -g copy-mode-mark-style 'bg=colour4 fg=colour7'
set -g copy-mode-match-style 'bg=colour3 fg=colour0'
set -g cursor-style blinking-block
set -g default-terminal "xterm-256color"
set -g destroy-unattached off
set -g detach-on-destroy off
set -g display-panes-active-colour 'colour1'
set -g display-panes-color 'colour7'
set -g escape-time 0
set -g menu-border-lines rounded
set -g menu-border-style 'fg=#{E:@active}'
set -g menu-selected-style "fg=#{E:@inactive} bg=#{E:@active}"
set -g message-command-style "bg=#{E:@bg} fg=#{E:@session} bold italics"
set -g message-line 2
set -g message-style "bg=#{E:@session} fg=#{E:@fg} bold"
set -g mode-keys vi
set -g mode-style 'bg=colour11 fg=colour0'
set -g mouse on
set -g other-pane-width 80
set -g pane-active-border-style "fg=#{E:@active}"
set -g pane-base-index 1
set -g pane-border-format " #{?pane_active,,#[fg=terminal]} #P#{?#{||:#{==:#T,#H},#{==:#T,}},, 󰌖 #T}#{?pane_current_path,   #{s|$HOME|~|:pane_current_path},}#{?#{pane_start_command},   #{pane_start_command},} "
set -g pane-border-indicators both
set -g pane-border-lines heavy
set -g pane-border-status top
set -g pane-border-style "fg=#{E:@inactive} bright bg=#{E:@inactive}"
set -g popup-border-lines rounded
set -g popup-border-style "fg=colour13"
set -g remain-on-exit off
set -g renumber-windows on
set -g set-titles on
set -g status 2
set -g status-format[1] " #[fg=#{E:@session}]  #[fg=#{E:@fg}]#{s|$HOME|~|:pane_current_path}#[default] #[align=absolute-centre] #[fg=#{E:@success}] #[fg=default]#{host} #{window-status-separator} #[fg=#{E:@warning}]  #[fg=default]%Y-%m-%d #{window-status-separator} #[fg=#{E:@error}] #[fg=default] %H:%M #[align=right] #{?client_prefix,#[fg=#{E:@error}]#[reverse]󰧹 <C-b>#[noreverse]#[fg=default] ,}"
set -g status-interval 1
set -g status-justify absolute-centre
set -g status-keys vi
set -g status-left "#[fg=#{E:@session}]#[bg=#{E:@session} fg=default]  #S:#{s|$HOME|~|:session_path}#{?session_alerts, #{session_alerts},}#[fg=#{E:@session} bg=default]"
set -g status-left-length 120
set -g status-left-style ""
set -g status-position bottom
set -g status-right "#{P: #[range=pane|#{pane_id}]#{?pane_active,#{?window_zoomed_flag,#[fg=#{E:@active}],#[fg=#{E:@pane}]}#{?window_zoomed_flag,#[fg=#{E:@inactive} bg=#{E:@active}],#[fg=#{E:@fg} bg=#{E:@pane}]},#{?pane_last,#[fg=#{E:@pane}],#[fg=#{E:@inactive} bold]}}  #P :#{?#{==:#{pane_title},#{host}},#[italics]#{pane_current_command}#[noitalics],#{pane_title}}#{?pane_active,#{?window_zoomed_flag,#[fg=#{E:@active} bg=#{E:@bg}],#[fg=#{E:@pane} bg=#{E:@bg}]},} #[range=right default]#{?#{==:#{window_panes},#{pane_index}},,#{E:window-status-separator}}}"
set -g status-right-length 120
set -g status-style "bg=#{E:@bg} fg=#{E:@fg}"
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g window-active-style 'bg=terminal'
set -g window-status-current-format "#{?window_start_flag,, }#[fg=#{E:@fg} bg=#{E:@window}]󰓫 #I:#W#{?#F, #F,}#[default]#{?window_end_flag,, }"
set -g window-status-current-style "fg=#{E:@window}"
set -g window-status-format "#{?window_start_flag,, }󰓫 #I:#W#{?#F, #F,}#{?window_end_flag,, }"
set -g window-status-last-style "fg=#{E:@window} nobold"
set -g window-status-separator '#[fg=colour8]'
set -g window-status-style "fg=#{E:@inactive} bold"
set -g window-style 'bg=#{E:@inactive}'
set -sa terminal-overrides ",xterm*:Tc"

#  «««

# Hooks
set-hook -g after-start-server 'run-shell noti -t "server started"'

# Bindings »»»

bind-key -n MouseDown1Status \
  display -d0 'line: #{mouse_status_line}, range: #{mouse_status_range}' \;\
  if -F '#{==:#{mouse_status_range},pane}' {
    run "tmux select-pane -t '#{pane_id}'"
  } {
    if -F '#{==:#{mouse_status_range},window}' { select-window -t = }
  }

bind -N "Last pane" \; last-pane -Z
bind -N "Rename pane" v \
  command-prompt -I "#{pane_title}" { selectp -T '%%' }
bind -N "Respawn pane" r \
  command-prompt -I "respawn-pane -k #{pane_start_command}"
bind -N "Clear screen" C-l send 'C-l'
bind -N "List all keys" / list-keys
bind -N "Customize mode" O customize-mode -Z
bind -N "Open kill menu" x \
  menu -T 'Kill...' \
    server S {
      kill-server
    } '' session s {
      kill-session
    } other-sessions C-s {
      kill-session -a
    } '' window w {
      kill-window
    } other-windows C-w {
      kill-window -a
    } respawn-window W {
      respawn-window -k
    } '' pane p {
      kill-pane
    } other-panes C-p {
      kill-pane -a
    } respawn-pane P {
      command-prompt -I "respawn-pane -k #{pane_start_command}"
    }

bind -N 'Open goto menu' g \
  menu -T 'Goto Menu' \
    buku b {
      popup -T 'buku' -EE 'tmuxp load -d buku && tmux attach -t buku'
    } 'launch session' g {
      popup -h 80% -w 80 -T 'launch session' -EE '\
        tmuxp ls | \
        fzf --multi \
          --bind "ctrl-o:execute(tmuxp load -d {})" \
          --bind "ctrl-e:execute(tmuxp edit {})" | \
        xargs tmuxp load -y'
    } mods m {
      splitp -hbl 80 mods
    } nb n {
      popup -h 90% -w 66% -y 0 -T nb -EE 'tmux attach -t nb'
    } spotify p {
      popup -h 90% -w 66% -T 'spotify' -EE 'tmux attach -t spotify'
    } btop t {
      popup -h 100% -w 100% -T btop -h 90% -w 95% -E btop
    }
#  «««

# vim: ft=tmux.tmpl fdm=marker fdl=0 fmr=\ »»»,\ «««

