# Tmux Configuration
if "test ! -d ~/.config/tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

# List plugins
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-sensible'
set-option -g @plugin 'tmux-plugins/tmux-pain-control'
set-option -g @plugin 'tmux-plugins/tmux-yank'
set-option -g @plugin 'tmux-plugins/tmux-cpu'
set-option -g @plugin 'tmux-plugins/tmux-battery'
set-option -g @plugin 'tmux-plugins/tmux-sessionist'
set-option -g @plugin 'catppuccin/tmux#v2.1.2'

if 'test "$(dark-mode status)" = "on"' \
  'set -g @catppuccin_flavor "mocha"' \
  'set -g @catppuccin_flavor "latte"'
set-option -g @catppuccin_window_status_style 'rounded'
set-option -g @fingers-jump-key 'C-f'

run "#{d:current_file}/plugins/tmux/catppuccin.tmux"

set-option -g status-right-length 100
set-option -g status-left-length 100
set-option -g status-left ""
set-option -g status-right "#{E:@catppuccin_status_session}"
set-option -agF status-right "#{E:@catppuccin_status_application}"
set-option -agF status-right "#{E:@catppuccin_status_cpu}"
set-option -ag status-right "#{E:@catppuccin_status_uptime}"
set-option -agF status-right "#{E:@catppuccin_status_battery}"

set-option -g aggressive-resize on
set-option -g allow-passthrough all
set-option -g allow-rename on
set-option -g automatic-rename on
set-option -g base-index 1
# set -g default-command "~/.local/share/mise/shims/nu"
set-option -g default-terminal "xterm-256color"
set-option -g destroy-unattached off
set-option -g detach-on-destroy off
set-option -g escape-time 0
set-option -g extended-keys always
set-option -g mode-keys vi
set-option -g mouse on
set-option -g other-pane-width 80
set-option -g pane-base-index 1
set-option -g remain-on-exit on
set-option -g renumber-windows on
set-option -g set-titles on
set-option -g status-interval 1
set-option -sa terminal-overrides ',xterm*:Tc'

run "#{d:current_file}/plugins/tpm/tpm"

# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Alternatively, if you want to disable wrapping when moving in non-neovim panes, use these bindings
# bind-key -n C-h if -F '#{@pane-is-vim}' { send-keys C-h } { if -F '#{pane_at_left}'   '' 'select-pane -L' }
# bind-key -n C-j if -F '#{@pane-is-vim}' { send-keys C-j } { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
# bind-key -n C-k if -F '#{@pane-is-vim}' { send-keys C-k } { if -F '#{pane_at_top}'    '' 'select-pane -U' }
# bind-key -n C-l if -F '#{@pane-is-vim}' { send-keys C-l } { if -F '#{pane_at_right}'  '' 'select-pane -R' }

# Smart pane resizing with awareness of Neovim splits.
# bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
# bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
# bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
# bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# My own loveliness
bind-key S switch-client -l

set-hook -g pane-died[10] {
    menu -T "What next?" -x "#{popup_pane_left}" -y "#{popup_pane_bottom}" \
      "respawn pane" r "respawn-pane -k" \
      "new command" n {
        command-prompt -I "respawn-pane "
      } \
      "kill-pane" q "kill-pane" \
      "scroll up" C-u {
        copy-mode
        send-keys -X halfpage-up
      }
  }

bind-key -n -N "Respawn dead pane" Enter \
  if -F '#{pane_dead}' respawn-pane { send-keys Enter }

bind-key -n -N "Kill dead pane" q \
  if -F '#{pane_dead}' kill-pane { send-keys q }

bind-key -N "Open mods menu" C-m \
  menu -T "mods..." -x "#{popup_pane_left}" -y "#{popup_pane_bottom}" \
    new n { splitw -hbl 82 mods } \
    continue c { splitw -hbl 82 "mods -C" } \
    last l { splitw -hbl 82 "mods -PS" }

bind-key -N "Customize mode" O customize-mode -Z

bind-key -N "Open rename menu" r \
  menu -T "Rename..." -x "#{popup_pane_left}" -y "#{popup_pane_bottom}" \
    session s {
      command-prompt -p "session name:" -I '#{session_name}' { rename-session '%%' }
    } window w {
      command-prompt -p "window name:" -I '#{window_name}' { rename-window '%%' }
    } pane p {
      command-prompt -p "pane title:" -I '#{pane_title}' { select-pane -T '%%' }
    }

bind-key -N "Open kill menu" x \
  menu -T "Kill..." -x "#{popup_pane_left}" -y "#{popup_pane_bottom}" \
    server S {
      kill-server
    } '' session s {
      kill-session
    } other-sessions C-s {
      kill-session -a
    } '' window w {
      kill-window
    } other-windows C-w {
      kill-window -a
    } respawn-window W {
      command-prompt -I "respawn-window -k"
    } '' pane p {
      kill-pane
    } other-panes C-p {
      kill-pane -a
    } respawn-pane P {
      command-prompt -I "respawn-pane -k"
    }

bind-key -N "Last pane" \; last-pane -Z

bind-key -N "List all keys" / list-keys

# Use prefix, C-l to clear screen
bind-key -N "Clear screen" C-l send 'C-l'

set-option -s user-keys[0] "\e[13;2u"
bind-key -n User0 send-keys "\e[13;2u"


# Style vi-mode command prompt
set-option -g status-keys vi
set-option -g message-style 'bg=#{@thm_bg},fg=#{@thm_pink}'
set-option -g message-command-style 'bg=#{@thm_pink},fg=#{@thm_bg}'

# Set prefix
unbind C-b
set-option -g prefix M-m
bind-key -n M-m send-prefix

# Do splits
bind-key -N "Split pane horizontal" v split-window -h
bind-key -N "Split pane vertical" V split-window -v

# Quick scroll mode
bind-key -N "Copy mode" C-u "copy-mode; send-keys -X halfpage-up"

# Sorted session picker
bind-key -N "Session picker" s choose-tree -sZ -O time

# Rename pane
bind-key -N "Rename pane" M-, command-prompt -I "#T" { select-pane -T "%%" }
