{{- /* vim: ft=tmux.tmpl */ -}}
bind -n MouseDown1Status \
  display -d0 'line: #{mouse_status_line}, range: #{mouse_status_range}' \;\
  if -F '#{==:#{mouse_status_range},pane}' {
    run "tmux select-pane -t '#{pane_id}'"
  } {
    if -F '#{==:#{mouse_status_range},window}' { select-window -t = }
  }

bind -n -N "Respawn dead pane" Enter \
  if -F '#{pane_dead}' respawn-pane { send-keys Enter }

bind -N 'Attach via tmuxp' a \
  run 'zsh -ic "tmuxp-attach"'

bind -N 'Edit tmuxp template' C-a \
  run 'zsh -ic "tmuxp-edit"'

bind -N "Open mods menu" C-m \
  menu -T "mods..." -x "#{popup_pane_left}" -y "#{popup_pane_bottom}" \
    new n { splitw -hbl 82 mods } \
    continue c { splitw -hbl 82 "mods -C" } \
    last l { splitw -hbl 82 "mods -PS" }

bind -N "Customize mode" O customize-mode -Z

bind -N "Open rename menu" r \
  menu -T "Rename..." -x "#{popup_pane_left}" -y "#{popup_pane_bottom}" \
    session s {
      command-prompt -p "session name:" -I '#{session_name}' { rename-session '%%' }
    } window w {
      command-prompt -p "window name:" -I '#{window_name}' { rename-window '%%' }
    } pane p {
      command-prompt -p "pane title:" -I '#{pane_title}' { select-pane -T '%%' }
    }

bind -N "Open kill menu" x \
  menu -T "Kill..." -x "#{popup_pane_left}" -y "#{popup_pane_bottom}" \
    server S {
      kill-server
    } '' session s {
      kill-session
    } other-sessions C-s {
      kill-session -a
    } '' window w {
      kill-window
    } other-windows C-w {
      kill-window -a
    } respawn-window W {
      command-prompt -I "respawn-window -k '#{pane_start_command}'"
    } '' pane p {
      kill-pane
    } other-panes C-p {
      kill-pane -a
    } respawn-pane P {
      command-prompt -I "respawn-pane -k '#{pane_start_command}'"
    }

bind -N "Last pane" \; last-pane -Z

bind -N "List all keys" / list-keys

bind -N "Clear screen" C-l send 'C-l'

#
# Smart Splits
#

# Smart pane switching with awareness of Neovim splits.
bind-key -N "Switch pane left" -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -N "Switch pane down" -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -N "Switch pane up" -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -N "Switch pane right" -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Smart pane resizing with awareness of Neovim splits.
bind-key -N "Resize pane left" -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
bind-key -N "Resize pane down" -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
bind-key -N "Resize pane up" -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
bind-key -N "Resize pane right" -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

# Forward old keys
bind-key -N "Send C-h" C-h send-keys C-h
bind-key -N "Send C-j" C-j send-keys C-j
bind-key -N "Send C-k" C-k send-keys C-k
bind-key -N "Send C-l" C-l send-keys C-l

bind-key -N "Switch pane left" 	-T copy-mode-vi 'C-h' select-pane -L
bind-key -N "Switch pane down" 	-T copy-mode-vi 'C-j' select-pane -D
bind-key -N "Switch pane up"   	-T copy-mode-vi 'C-k' select-pane -U
bind-key -N "Switch pane right"	-T copy-mode-vi 'C-l' select-pane -R
