# vim: fdm=marker fdl=1 fmr=\ »»»,\ «««

# XDG »»»
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:=$HOME/.config}"
export XDG_DATA_HOME="${XDG_DATA_HOME:=$HOME/.local/share}"
export XDG_STATE_HOME="${XDG_STATE_HOME:=$HOME/.local/state}"
export XDG_CACHE_HOME="${XDG_CACHE_HOME:=$HOME/.cache}"
export XDG_RUNTIME_DIR="${XDG_RUNTIME_DIR:=$TMPDIR}"
#  «««

# Secrets »»»
if [[ -f "${ZDOTDIR:-$HOME}"/.zsecrets ]]; then
  source "${ZDOTDIR:-$HOME}"/.zsecrets
fi
#  «««

# Browser »»»
if [[ -z "$BROWSER" && "$OSTYPE" == darwin* ]]; then
  export BROWSER='open'
fi
#  «««

# Editors »»»
if [[ -z "$EDITOR" ]]; then
  export EDITOR='nvim'
fi
if [[ -z "$VISUAL" ]]; then
  export VISUAL='neovide --no-fork'
fi
if [[ -z "$PAGER" ]]; then
  export PAGER='less'
fi
#  «««

# Language »»»
if [[ -z "$LANG" ]]; then
  export LANG='en_US.UTF-8'
fi
#  «««

{{ if eq .chezmoi.os "linux" -}}
# homebrew »»»
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
#  «««
{{- end }}


# Paths »»»

# Ensure path arrays do not contain duplicates.
typeset -gU cdpath fpath mailpath path

# Set the list of directories that cd searches.
# cdpath=(
#   $cdpath
# )

# Set the list of directories that Zsh searches for programs.
path=(
  /opt/{homebrew,local}/{,s}bin(N)
  /usr/local/{,s}bin(N)
  $path
)

if (( $+commands[python3] )); then
  path=("$(brew --prefix)"/opt/python@3.12/libexec/bin $path)
fi

if (( $+commands[bob] )); then
  path=("${XDG_DATA_HOME}"/bob/nvim-bin $path)
fi

if (( $+commands[go] )); then
  export GOPATH="$(go env GOPATH)"
  path=("${GOPATH:-$HOME/go}"/bin $path)
fi

if (( $+commands[composer] )); then
  path=("$XDG_CONFIG_HOME"/composer/vendor/bin $path)
fi

path=(
  $HOME/.local/bin
  $HOME/bin
  $path
)

fpath=(
  $HOME/.local/functions
  /opt/homebrew/share/zsh/site-functions
  $fpath
)
#  «««

# Less »»»

# Set the default Less options.
# Mouse-wheel scrolling has been disabled by -X (disable screen clearing).
# Remove -X to enable it.
if [[ -z "$LESS" ]]; then
  export LESS='-g -i -M -R -S -w -X -z-4'
fi

# Set the Less input preprocessor.
# Try both `lesspipe` and `lesspipe.sh` as either might exist on a system.
if [[ -z "$LESSOPEN" ]] && (( $#commands[(i)lesspipe(|.sh)] )); then
  export LESSOPEN="| /usr/bin/env $commands[(i)lesspipe(|.sh)] %s 2>&-"
fi
#  «««

# Rust »»»
. "$HOME/.cargo/env"
#  «««
