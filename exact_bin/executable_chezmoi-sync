#!/usr/bin/env zsh

set -euo pipefail

local readd=()
local destroy=()
local apply=()

while read -r stat file; do
  case $stat in
    MM)
      gum log -l info --prefix "readd" " $file"
      readd+="$file"
      ;;
    DA)
      gum log -l warn --prefix destroy "$file"
      destroy+="$file"
      ;;
    D)
      gum log -l warn --prefix apply "  $file"
      apply+="$file"
      ;;
    R)
      gum log -l warn --prefix run "    $file"
      ;;
    "")
      gum log -l info "No files to sync"
      ;;
    *)
      gum log -l error --prefix "ERROR" "unknown status: $stat"
      gum log --prefix "$file"
      exit 1
      ;;
  esac
done <<< $(gum spin --title="Checking status..." --show-output -- chezmoi status)

(( $#readd )) && \
  chezmoi re-add --interactive "${readd[@]/#/$HOME/}"

(( $#destroy )) && gum spin --title="Destroying..." --show-error -- \
  chezmoi destroy "${destroy[@]}"

(( $#apply )) && gum spin --title="Applying..." --show-error -- \
  chezmoi apply "${apply[@]}"

gum log -l info --prefix externals "Refreshing externals..."
chezmoi source-path |
  xargs -I_ cat _/.chezmoiexternal.toml |
  yj -t |
  jq -r 'keys | @sh | gsub("'\''"; "")' |
  read repos

for repo in ${(z)repos}; do
  gum log -l info --prefix externals "$repo"
  repo="$HOME/$repo"
  if ! git -C $repo diff-index --quiet HEAD --; then
    git -C $repo add -A
    git -C $repo status -s
    git -C $repo commit -m "$(gum input --header "Commit message...")"
  fi
  gum spin --title="Pulling..." --show-error -- git -C $repo pull
  branch=$(git -C $repo rev-parse --abbrev-ref HEAD)
  if [[ $(git -C $repo rev-list --left-right --count $branch | cut -f 1) -ne 0 ]]; then
    gum spin --title="Pushing..." --show-error -- $( git -C $repo push || true )
  fi
done

