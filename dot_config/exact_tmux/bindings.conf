bind-key -N "Reload config" r source-file $TMUX_CONFIG_FILE \; display-message "Config reloaded!"
bind-key -N "Clear screen" C-l send-keys 'C-l'
bind-key -N "List all keys" / list-keys
unbind-key R
bind-key -N "Respawn pane" R confirm-before -p "Respawn pane? (y/n)" "respawn-pane -k"
bind-key -N "Customize mode" O customize-mode -Z
bind-key -N "Kill server" Q confirm-before -p "Kill server? (y/n)" "kill-server"

bind-key -n -N "Toggle popup window" c-\\ if-shell -F '#{==:#{session_name},home}' {
  if-shell '[[ $(tmux list-clients | wc -l) -gt 1 ]]' {
    detach-client
  }
} {
  display-popup -d "#{pane_current_path}" -xC -yC -w 80% -h 75% -T 'home' -E \
    'tmux new-session -A -s home'
}

#  Popup key table
#  ────────────────────────────────────────────────────────────

bind-key -N "Switch to popup keys table" g switch-client -T popit
bind-key -T popit -N "Popup spotify player" p display-popup -x C -y C -w 80% -h 80% -E 'tmux new -A -s spotify -n main spotify_player'
bind-key -T popit -N "Popup qutebrowser" q display-popup -x C -y S -w 100% -h 30% -E 'tmux new -A -s qutebrowser -n main qutebrowser'
bind-key -T popit -N "Popup tmuxp load" s display-popup -x C -y S -w 80 -h 90% -E 'tmuxp ls | sk | xargs -I _ tmuxp load -d _'
bind-key -T popit -N "Popup tmuxp edit" S display-popup -x C -y C -w 120 -h 90% -E 'ls $HOME/.config/tmuxp | sk | xargs -I _ nvim $HOME/.config/tmuxp/_'
bind-key -T popit -N "Popup doppler tui" D display-popup -x C -y C -w 90% -h 90% -E 'doppler tui'
bind-key -T popit -N "Popup lazydocker" d display-popup -x C -y C -w 95% -h 95% -E 'lazydocker'
bind-key -T popit -N "Popup lazygit" g display-popup -x C -y C -w 95% -h 95% -E 'lazygit'
bind-key -T popit -N "List popit keys" ? list-keys -N -T popit
bind-key -T popit -N "List popit keys (raw)" / list-keys -T popit

#  Edit config popups
#  ────────────────────────────────────────────────────────────
bind-key -N "Switch to config editing" e switch-client -T edit
bind-key -T edit -N "Edit tmux config" t display-popup -x C -y C -w 120 -h 90% -d $HOME/.config/tmux -E 'nvim'
bind-key -T edit -N "Edit neovim config" n display-popup -x C -y C -w 120 -h 90% -d $HOME/.config/nvim -E 'nvim'
bind-key -T edit -N "Edit tmuxp config" T display-popup -x C -y C -w 120 -h 90% -d $HOME/.config/tmuxp -E 'nvim'
bind-key -T edit -N "List edit keys" ? list-keys -N -T edit
bind-key -T edit -N "List edit keys (raw)" / list-keys -T edit

#
# Smart Splits Setup
#

# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Alternatively, if you want to disable wrapping when moving in non-neovim panes, use these bindings
# bind-key -n C-h if -F '#{@pane-is-vim}' { send-keys C-h } { if -F '#{pane_at_left}'   '' 'select-pane -L' }
# bind-key -n C-j if -F '#{@pane-is-vim}' { send-keys C-j } { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
# bind-key -n C-k if -F '#{@pane-is-vim}' { send-keys C-k } { if -F '#{pane_at_top}'    '' 'select-pane -U' }
# bind-key -n C-l if -F '#{@pane-is-vim}' { send-keys C-l } { if -F '#{pane_at_right}'  '' 'select-pane -R' }

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# vim: ft=tmux
