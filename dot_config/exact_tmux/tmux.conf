# vim: ft=tmux

TMUX_CONFIG_DIR="$XDG_CONFIG_HOME/tmux"
TMUX_CONFIG_FILE="$TMUX_CONFIG_DIR/tmux.conf"

#
# Plugins
#

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-yank'

# Custom Plugins
# set -g @plugin 'theutz/stunning-theme'
# run $HOME/code/theutz/stunning-theme/stunning_theme.tmux # local dev

if "test ! -d $TMUX_CONFIG_DIR/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm $TMUX_CONFIG_DIR/plugins/tpm && $TMUX_CONFIG_DIR/plugins/tpm/bin/install_plugins'"
run "$TMUX_CONFIG_DIR/plugins/tpm/tpm"

#
# Options
#

# set -g default-command "/opt/homebrew/bin/nu"
set -g aggressive-resize on
set -g allow-passthrough all
set -g base-index 1
set -g default-terminal "xterm-256color"
set -g destroy-unattached off
set -g detach-on-destroy off
set -g escape-time 0
set -g message-line 2
set -g mode-keys vi
set -g mouse on
set -g pane-active-border-style "fg=colour4"
set -g pane-base-index 1
set -g pane-border-format " #{?pane_active,,} #{pane_index}#{?#{pane_title},:,}#{?#{==:#{pane_title},#{host}},,#{pane_title}} #(echo '#{pane_current_path}' | sed \"s|^$HOME|~|\") "
set -g pane-border-indicators both
set -g pane-border-lines heavy
set -g pane-border-status top
set -g pane-border-style "fg=colour8"
set -g popup-border-lines "rounded"
set -g remain-on-exit off
set -g renumber-windows on
set -g set-titles on
set -g status 2
set -g status-format[1] ' #[fg=colour2,italics,align=absolute-centre] #[fg=default]#{host} #[fg=colour7]#[fg=default] #[fg=colour2] #[fg=default]%Y-%m-%d #[fg=colour7]#[fg=default] #[fg=colour2] #[fg=default]%H:%M #{?client_prefix,#[fg=colour5 align=right]#[reverse]󰧹 <C-b>#[noreverse]#[fg=default] ,}'
set -g status-interval 1
set -g status-justify absolute-centre
set -g status-keys vi
set -g status-left ' #[bg=default]#[fg=colour1] #[fg=default] #S #[fill=terminal]'
set -g status-left-length 120
set -g status-position bottom
set -g status-right "#{P: #{?pane_active,#[fg=colour4],#[fg=colour8]} #{pane_index}:#{?#{==:#{pane_title},#{host}},,#{pane_title}} #(echo \"#{pane_current_path}\" | sed \"s|^$HOME|~|\") #{?pane_active,#[nobold],#[nodim]}}"
set -g status-right-length 120
set -g status-style "bg=terminal fg=colour3"
set -g visual-activity off
set -g window-status-current-format " 󱏀 #I #W #{?window_flags,#[fg=colour5]#{window_flags}, } "
set -g window-status-format " 󰓫 #I #W #{?window_flags,#{window_flags}, } "
set -g window-status-style "fg=colour8"
set -g window-status-current-style "fg=colour2"
set -sa terminal-overrides ",xterm*:Tc"

#
# Hooks
#

set-hook -g after-split-window[100] {
  command-prompt -i -I "#{pane_title}" -p 'Pane title:' {
    select-pane -T '%%'
    select-pane -T "#{s/^=//:pane_title}"
  }
}

set-hook -g after-new-window[100] {
  command-prompt -I "#{pane_current_path},#{pane_title}" -p "Window title:,Pane title:" {
    rename-window '%1'
    select-pane -T '%2'
  }
}

#
# Bindings
#

# Root
# bind-key -N "Scroll page up" -T root 'copy-mode -eu'

# Prefix

unbind-key R

bind-key -N "Rename pane" v command-prompt -I "#{pane_title}" { select-pane -T '%%' }
bind-key -N "Reload config" r source-file $TMUX_CONFIG_FILE \; display-message "Config reloaded!"
bind-key -N "Clear screen" C-l send-keys 'C-l'
bind-key -N "List all keys" / list-keys
bind-key -N "Respawn pane" R confirm-before -p "Respawn pane? (y/n)" "respawn-pane -k"
bind-key -N "Customize mode" O customize-mode -Z
bind-key -N "Kill server" Q confirm-before -p "Kill server? (y/n)" "kill-server"

bind-key -N "Select layout" Space display-menu -xC -yS -T 'Choose layout...' \
  'even-horizontal' h 'select-layout even-horizontal' \
  'even-vertical' v 'select-layout even-vertical' \
  'main-horizontal' H 'select-layout main-horizontal' \
  'main-vertical' V 'select-layout main-vertical'\
  'tiled' t 'select-layout tiled'

bind-key -N 'Open popup menu' g display-menu -xC -yS -T 'Popup Menu' \
  'tmux control' g {
    display-popup -x C -y S -h 100% -w 80% -E tmux-control
  } \
  'Spotify player' p {
    display-popup -x C -y S -h 90% -w 90% -E '\
      tmux new-session -A -s spotify -n main spotify_player \
    ' \
  } \
  'nb Shell' n 'run "popup nb"' \
  # 'Buku shell' b 'run "popup buku"'
