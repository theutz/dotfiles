#
# Tmux Configuration
#

# Plugins {{{

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-yank'

if "test ! -d #{d:current_file}/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm #{d:current_file}/plugins/tpm && #{d:current_file}/plugins/tpm/bin/install_plugins'"
run "#{d:current_file}/plugins/tpm/tpm"

# }}}

# Options {{{

# User Styles {{{

set -g @fg 'colour15'
set -g @bg 'terminal'
set -g @pri 'colour12'
set -g @sec 'colour13'
set -g @warn 'colour3'
set -g @err 'colour1'
set -g @win 'colour2'
set -g @cool 'colour6'
set -g @dim 'colour8'
set -g @over 'colour0'
set -g @hi 'colour13'

# }}}

# Styles {{{

set -g cursor-style blinking-block
set -g menu-border-style 'fg=colour5'
set -g menu-selected-style "fg=#{E:@over} bg=#{E:@win}"
set -g message-command-style "#{message_style} reverse italics"
set -g message-style "fg=#{E:@fg} bg=#{E:@cool} bold"
set -g pane-active-border-style "fg=#{E:@pri}"
set -g pane-border-style "fg=#{E:@dim}"
set -g popup-border-style "fg=#{E:@hi}"
set -g status-style "bg=#{E:@bg} fg=#{E:@dim}"
set -g status-left-style "fg=#{E:@pri}"
set -g window-status-current-style "fg=#{E:@pri}"
set -g window-status-last-style "fg=#{E:@cool}"
set -g window-status-style "fg=#{E:@dim}"

# }}}

# Formats {{{

set -g pane-border-format " #{?pane_active,,} #P#{?#T,:,}#{?#{==:#T,#H},,#T} #[fg=#{E:@dim}]#{s|$HOME|~|:pane_current_path} "

set -g status-format[1] ''
set -ga status-format[1] "   #{s|$HOME|~|:pane_current_path}"
set -ga status-format[1] '#[align=absolute-centre]'
set -ga status-format[1] ' #[fg=#{E:@hi}] #[fg=default]#{host}'
set -ga status-format[1] ' #{window-status-separator} '
set -ga status-format[1] '#[fg=#{E:@hi}] #[fg=default]%Y-%m-%d'
set -ga status-format[1] ' #{window-status-separator} '
set -ga status-format[1] '#[fg=#{E:@hi}]#[fg=default] %H:%M'
set -ga status-format[1] '#[align=right]'
set -ga status-format[1] '#{?client_prefix,#[fg=#{E:@err}]#[reverse]󰧹 <C-b>#[noreverse]#[fg=default] ,}'

set -g status-left "   #S:#[fg=#{E:@dim}]#{s|$HOME|~|:session_path} #{session_alerts}"

set -g status-right ''
set -ga status-right "#{P: "
set -ga status-right "#{?pane_active,#[fg=#{E:@pri}],}"
set -ga status-right "#{?#{&&:#{pane_active},#{window_zoomed_flag}},#[fg=#{E:@hi}],}"
set -ga status-right "#{?pane_last,#[fg=#{E:@cool}],}"
set -ga status-right "  #P"
set -ga status-right ":#{?#{==:#{pane_title},#{host}},#[italics]#{pane_current_command}#[noitalics],#{pane_title}}"
# set -ga status-right "#{s|$HOME|~|:pane_current_path}"
set -ga status-right " #[fg=default]}"

set -g window-status-current-format "#{E:window-status-format}"
set -g window-status-format "#{?window_start_flag,, }󰓫 #I:#W#{?#F, #F,}#{?window_end_flag,, }"
set -g window-status-separator ''
# set -g automatic-rename-format "#{?pane_in_mode,[tmux],󰎔}"
# }}}

# Aliases {{{

set -g command-alias[100] vsp="split-window -h"
set -g command-alias[101] sp="split-window -v"
set -g command-alias[1450] is-pane-dead='run "[[ $(tmux display -p \"#{pane_dead}\") == 1 ]]"'
set -g command-alias[20548] mods='command-prompt -p "mods:" { splitw -h -l 80 mods "%%" }'
set -g command-alias[29547] man='splitw -h -l 80 ''; set -p remain-on-exit off; respawnp -k man tmux'

# }}}

# Miscellaneous {{{

set -g aggressive-resize on
set -g allow-passthrough all
set -g base-index 1
set -g default-terminal "xterm-256color"
set -g destroy-unattached off
set -g detach-on-destroy off
set -g escape-time 0
set -g menu-border-lines rounded
set -g message-line 2
set -g mode-keys vi
set -g mouse on
set -g other-pane-width 80
set -g pane-base-index 1
set -g pane-border-indicators both
set -g pane-border-lines heavy
set -g pane-border-status top
set -g popup-border-lines rounded
set -g remain-on-exit on
set -g renumber-windows on
set -g set-titles on
set -g status on
set -g status-interval 1
set -g status-justify absolute-centre
set -g status-keys vi
set -g status-left-length 120
set -g status-position bottom
set -g status-right-length 120
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -sa terminal-overrides ",xterm*:Tc"

# }}}

# }}}

# Hooks {{{

# after-split-window {{{
# set-hook -g after-split-window[100] {
#   command-prompt -i -I "#{pane_title}" -p 'Pane title:' {
#     select-pane -T '%%'
#     select-pane -T "#{s/^=//:pane_title}"
#   }
# }
# }}}

# after-new-window {{{
# set-hook -g after-new-window[100] {
#   command-prompt -I "#{pane_current_path},#{pane_title}" -p "Window title:,Pane title:" {
#     rename-window '%1'
#     select-pane -T '%2'
#   }
# }
# }}}

# }}}

# Bindings {{{

# Root {{{

bind -N "Enter (dead: respawn)" -n Enter \
  if 'tmux is-pane-dead' { respawn-pane } { send-keys Enter }
bind -N "q (dead: kill)" -n q \
  if 'tmux is-pane-dead' { kill-pane } { send-keys q }
bind -N "C-u (dead: scroll up)" -n C-u \
  if 'tmux is-pane-dead' { copy-mode -eu } { send-keys C-u }
bind -N ": (dead: cmd)" -n : \
  if 'tmux is-pane-dead' { command-prompt } { send-keys : }

# }}}

# Prefix {{{

# Miscellaneous {{{

unbind R
bind -N "Rename pane" v \
  command-prompt -I "#{pane_title}" { selectp -T '%%' }
bind -N "Reload config" r \
  source -F '#{config_files}' \; display "Config reloaded!"
bind -N "Clear screen" C-l send 'C-l'
bind -N "List all keys" / list-keys
bind -N "Respawn pane" R \
  confirm -p "Respawn pane? (y/n)" "respawn-pane -k"
bind -N "Customize mode" O customize-mode -Z
bind -N "Kill server" Q \
  confirm -p "Kill server? (y/n)" "kill-server"

# }}}

# Goto menu {{{

bind -N 'Open goto menu' g \
  menu -T 'Goto Menu' \
    buku b {
      popup -T 'buku' -E 'tmux attach -t buku'
    } session g {
      menu -T 'Sessions' \
        playcore p {
          if 'tmux has -t playcore-com' { switchc -t playcore-com } {
            source "$HOME/.config/tmux/sessions/playcore-com.conf"
          }
        }
    } nb n {
      popup -h 90% -w 66% -y 0 -T nb -E 'tmux attach -t nb'
    } spotify_player p {
      popup -h 90% -w 66% -y 0 -T 'spotify' -E 'tmux attach -t spotify'
    } btop t {
      popup -h 100% -w 100% -T btop -h 90% -w 95% -E btop
    }
# }}}

# }}}

# }}}

# Default Sessions {{{

%if '#{==:#{N/s:main},0}'
source -F "#{d:current_file}/sessions/main.conf"
%endif

%if '#{==:#{N/s:spotify},0}'
source -F "#{d:current_file}/sessions/spotify.conf"
%endif

%if '#{==:#{N/s:nb},0}'
source -F "#{d:current_file}/sessions/nb.conf"
%endif

%if '#{==:#{N/s:buku},0}'
source -F "#{d:current_file}/sessions/buku.conf"
%endif

# }}}

# vim: ft=tmux fdm=marker fdl=0
