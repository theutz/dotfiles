source-file ./opts-pre.conf

#  ╭──────────────────────────────────────────────────────────╮
#  │                         Plugins                          │
#  ╰──────────────────────────────────────────────────────────╯

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'laktak/extrakto'

# Custom Plugins

set -g @plugin 'theutz/stunning-theme'
# run $HOME/code/theutz/stunning-theme/stunning_theme.tmux # local dev

# run $HOME/code/theutz/tmuxp-ui/tmuxp-ui.tmux

# set -g @plugin 'theutz/tmux-tokyonight-nvim'
# set -g @tokyonight 'moon'
# # run $HOME/code/theutz/tmux-tokyonight-nvim/tokyonight.tmux

#                                  ┌                                           ┐
#                                  │ Install tpm & plugins if they don't exist │
#                                  └                                           ┘
if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

#                           ┌                                                  ┐
#                           │                   Initialize TMUX plugin manager │
#                           │ (keep this line at the very bottom of tmux.conf) │
#                           └                                                  ┘
run '~/.config/tmux/plugins/tpm/tpm'

#  ╭──────────────────────────────────────────────────────────╮
#  │                     Plugin overrides                     │
#  ╰──────────────────────────────────────────────────────────╯

#  Command aliases
#  ────────────────────────────────────────────────────────────

set -ga command-alias popit='display-popup -w 90% -h 90% -E'

#  Key bindings
#  ────────────────────────────────────────────────────────────

bind-key -N "Reload config" r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded!"
bind-key -N "Clear screen" C-l send-keys 'C-l'
bind-key -N "List all keys" / list-keys
unbind-key R
bind-key -N "Respawn pane" R confirm-before -p "Respawn pane? (y/n)" "respawn-pane -k"
bind-key -N "Customize mode" O customize-mode -Z
bind-key -N "Kill server" Q confirm-before -p "Kill server? (y/n)" "kill-server"

#  Popup key table
#  ────────────────────────────────────────────────────────────

bind-key -N "Switch to popup keys table" g switch-client -T popit
bind-key -T popit -N "boxes" B popit "boxes -l | less"
bind-key -T popit -N "btop" b popit "btop"
bind-key -T popit -N "chezmoi" c popit "cd $(chezmoi source-path) && nvim"
bind-key -T popit -N "figlet" f popit "showfigfonts | less"
bind-key -T popit -N "lazygit" g popit "lazygit"
bind-key -T popit -N "nb" n popit "nb shell"
bind-key -T popit -N "spotify" p popit "spotify_player"

#  Keyboard shortcuts for neovim
#  ────────────────────────────────────────────────────────────

# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# vim: ft=tmux
