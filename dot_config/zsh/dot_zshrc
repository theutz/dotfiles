#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/zprezto/init.zsh"
fi

# Customize to your needs...

#
# Contribs
#
contribs=(
	romkatv/zsh-defer
  lincheney/fzf-tab-completion
)
for contrib in $contribs; do
	if [[ ! -d $ZPREZTODIR/contrib/${contrib:t} ]]; then
		git clone https://github.com/${contrib} $ZPREZTODIR/contrib/${contrib:t}
	fi
done
unset contrib{,s}

#
# Functions
#

function rgd() {
  rg --json "$argv" | delta
}

function a() {
  if [ -f please ]; then
    php please $argv
  elif [ -f artisan ]; then
    php artisan $argv
  elif [ -f vendor/bin/wp ]; then
    vendor/bin/wp $argv
  fi
}

function lg() {
  if [ "$TERM_PROGRAM" = tmux ]; then
    tmux display-popup -w 90% -h 80% -E lazygit
  else
    lazygit
  fi
}
zle -N lg # create a zle widget so it can be bound to a key

function pope()
{
  tmux display-popup -E -h '90%' -w '70%' "nvim $argv"
}

#
# Variables
#

export KEYTIMEOUT=1

#
# Bindings
#

bindkey -M vicmd v edit-command-line
bindkey '^ ' autosuggest-accept
bindkey '^g' lg

#
# Aliases
#

alias cm="chezmoi"
alias cmcd="chezmoi cd"
alias cmma="chezmoi merge-all"
alias cma="chezmoi add"
alias cmA="chezmoi apply -v"

alias ranger="source ranger"
alias r="ranger"

alias v="${(z)VISUAL:-${(z)EDITOR}}"
alias e="${(z)EDITOR:-nvim}"

alias zshrc="pope $ZDOTDIR/.zshrc"
alias zpreztorc="pope $ZDOTDIR/.zpreztorc"
alias zshenv="pope $ZDOTDIR/.zshenv"
alias zprofile="pope $ZDOTDIR/.zprofile"

alias t="tmux"
alias tmuxe="pope $XDG_CONFIG_HOME/tmux/tmux.conf"

alias tmuxpe="pope $XDG_CONFIG_HOME/tmuxp"
alias tp="tmuxp"
alias tpl="tmuxp load"
alias tpe="tmuxpe"

alias nvime="pope $XDG_CONFIG_HOME/nvim"

#
# Suffix Aliases
#
alias -s {md,markdown,mkdwn}="glow -p"

#
# Man
#

export MANPAGER='nvim +Man!'
export MANWIDTH=999

#
# Ranger
#

export RANGER_LOAD_DEFAULT_RC=false

#
# Zoxide
#

function _load_zoxide {
	eval "$(zoxide init zsh)"
}
zsh-defer _load_zoxide

#
# Doppler
#

function _load_doppler {
	source <(doppler completion 2>/dev/null)
}
zsh-defer _load_doppler

#
# asdf
#

. "$(brew --prefix asdf)"/libexec/asdf.sh

#
# chezmoi
#

function _load_chezmoi {
	source <(chezmoi completion zsh)
}
zsh-defer _load_chezmoi

#
# composer
#

export COMPOSER_HOME="${XDG_CONFIG_HOME:=$HOME}/composer"

#
# broot
#

function _load_broot {
	source <(broot --print-shell-function zsh)
	broot --set-install-state installed
}
zsh-defer _load_broot

#
# atuin
#

function _load_atuin {
	eval "$(atuin init zsh)"
}
zsh-defer _load_atuin

#
# fzf
#

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
source "$ZPREZTODIR/contrib/fzf-tab-completion/zsh/fzf-zsh-completion.sh"
