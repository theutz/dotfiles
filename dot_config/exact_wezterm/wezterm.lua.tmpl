local wezterm = require("wezterm")

-- Config builder
local config = {}
if wezterm.config_builder then
	config = wezterm.config_builder()
end
config:set_strict_mode(true)

-- Color scheme & colors
local function get_appearance()
	if wezterm.gui then
		return wezterm.gui.get_appearance()
	end
	return "Dark"
end
local function scheme_for_appearance(appearance)
	if appearance:find("Dark") then
		return "Catppuccin Mocha"
	else
		return "Catppuccin Latte"
	end
end
config.color_scheme = scheme_for_appearance(get_appearance())
config.bold_brightens_ansi_colors = "BrightAndBold"
config.window_background_opacity = 0.8
config.text_background_opacity = 1.0
config.macos_window_background_blur = 40
config.inactive_pane_hsb = {
	saturation = 0.7,
	brightness = 0.2,
}
local function contrast_ratio_for_appearance(appearance)
	if appearance:find("Dark") then
		return 4.5
	else
		return 1.0
	end
end
config.text_min_contrast_ratio = contrast_ratio_for_appearance(get_appearance())

-- Fonts
config.font = wezterm.font("Berkeley Mono", { weight = 400 })
config.font_size = 16
config.line_height = 1.6

-- UI
config.quit_when_all_windows_are_closed = false
config.window_decorations = "RESIZE"
config.adjust_window_size_when_changing_font_size = false
-- config.window_close_confirmation = "AlwaysPrompt"
config.window_padding = {
	top = "16px",
	bottom = "4px",
	left = "8px",
	right = "0px",
}
config.use_fancy_tab_bar = false
config.show_tab_index_in_tab_bar = true
config.tab_max_width = 120
config.hide_tab_bar_if_only_one_tab = false
config.enable_tab_bar = true
config.tab_bar_at_bottom = true

-- Environment
config.default_prog = { "/Users/michael/.local/share/mise/shims/nu" }
config.set_environment_variables = {
	XDG_CONFIG_HOME = "{{ .chezmoi.homeDir }}/.config",
	XDG_DATA_HOME = "{{ .chezmoi.homeDir }}/.local/share",
	XDG_STATE_HOME = "{{ .chezmoi.homeDir }}/.local/state",
	XDG_CACHE_HOME = "{{ .chezmoi.homeDir }}/.cache",
}

-- Text rendering
config.allow_square_glyphs_to_overflow_width = "WhenFollowedBySpace"

-- Keyboard
config.enable_kitty_keyboard = true
config.leader = { key = "m", mods = "ALT" }
config.keys = {
	{ key = "\\", mods = "LEADER", action = wezterm.action.SplitPane({ direction = "Right" }) },
	{ key = "|", mods = "LEADER|SHIFT", action = wezterm.action.SplitPane({ direction = "Right", top_level = true }) },
	{ key = "-", mods = "LEADER", action = wezterm.action.SplitPane({ direction = "Down" }) },
	{ key = "_", mods = "LEADER", action = wezterm.action.SplitPane({ direction = "Down", top_level = true }) },
	{ key = "v", mods = "LEADER", action = wezterm.action.SplitVertical({ domain = "CurrentPaneDomain" }) },
	{ key = "s", mods = "LEADER", action = wezterm.action.SplitHorizontal({ domain = "CurrentPaneDomain" }) },
	{ key = "h", mods = "LEADER", action = wezterm.action.ActivatePaneDirection("Left") },
	{ key = "j", mods = "LEADER", action = wezterm.action.ActivatePaneDirection("Down") },
	{ key = "k", mods = "LEADER", action = wezterm.action.ActivatePaneDirection("Up") },
	{ key = "l", mods = "LEADER", action = wezterm.action.ActivatePaneDirection("Right") },
	{ key = "c", mods = "LEADER", action = wezterm.action.SpawnTab("CurrentPaneDomain") },
	{ key = "n", mods = "LEADER", action = wezterm.action.ActivateTabRelative(1) },
	{ key = "p", mods = "LEADER", action = wezterm.action.ActivateTabRelative(-1) },
	{ key = "x", mods = "LEADER", action = wezterm.action.CloseCurrentPane({ confirm = true }) },
	{ key = "C", mods = "LEADER|SHIFT", action = wezterm.action.SpawnWindow },
	{ key = "N", mods = "LEADER|SHIFT", action = wezterm.action.ActivateWindowRelative(1) },
	{ key = "P", mods = "LEADER|SHIFT", action = wezterm.action.ActivateWindowRelative(-1) },
	{ key = "X", mods = "LEADER|SHIFT", action = wezterm.action.CloseCurrentTab({ confirm = true }) },
	{ key = "r", mods = "LEADER", action = wezterm.action.RotatePanes("Clockwise") },
	{ key = "R", mods = "LEADER|SHIFT", action = wezterm.action.RotatePanes("CounterClockwise") },
	{ key = " ", mods = "LEADER", action = wezterm.action.QuickSelect },
	{ key = "<", mods = "LEADER", action = wezterm.action.MoveTabRelative(-1) },
	{ key = ">", mods = "LEADER", action = wezterm.action.MoveTabRelative(1) },
	{ key = "z", mods = "LEADER", action = wezterm.action.TogglePaneZoomState },
}

wezterm.on("window-config-reloaded", function(window, _)
	window:toast_notification("wezterm", "configuration reloaded!", nil, 4000)
end)

return config
