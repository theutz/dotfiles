# vim: ft=zsh fdm=marker fdl=0
# Builtin{{{
# Options{{{
setopt AUTO_CD
setopt AUTO_PUSHD
setopt EXTENDED_GLOB
# }}}
# Environment{{{
export KEYTIMEOUT=1
# }}}
# Bindings{{{
# Use vim-style key bindings
bindkey -v
bindkey -v '^?' backward-delete-char
autoload edit-command-line
zle -N edit-command-line
bindkey -M vicmd 'v' edit-command-line
# }}}
# Autoload Functions{{{
for func in "$HOME/.local/functions/*(N:t)"; do
  autoload -Uz $func
done
# }}}
# Autocomplete{{{
autoload -Uz compinit
compinit
# autoload -U +x bashcompinit && bashcompinit

# Enable path completion for multiple segments
zstyle ':completion:*' completer _complete _ignored _approximate
# }}}
# Syntax Highlighting{{{
source "${XDG_STATE_HOME}"/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# }}}
# }}}
# Integrations{{{
# Starship{{{
eval "$(starship init zsh)"
# }}}
# SSH Agent{{{
eval $(ssh-agent -s) &> /dev/null
find ~/.ssh -name 'id_*' ! -name '*.pub' -exec ssh-add -q --apple-use-keychain {} \; &!
# }}}
# asdf{{{
. $(brew --prefix asdf)/libexec/asdf.sh
# }}}
# lf{{{

function lfcd() {# {{{
  cd "$(command lf -print-last-dir "$@")" 
}
# }}}
_zlf() {# {{{
    emulate -L zsh
    local d=$(mktemp -d) || return 1
    {
        mkfifo -m 600 $d/fifo || return 1
        tmux split -bf zsh -c "exec {ZLE_FIFO}>$d/fifo; export ZLE_FIFO; exec lf" || return 1
        local fd
        exec {fd}<$d/fifo
        zle -Fw $fd _zlf_handler
    } always {
        rm -rf $d
    }
}
zle -N _zlf
bindkey '\ek' _zlf
# }}}
_zlf_handler() {# {{{
    emulate -L zsh
    local line
    if ! read -r line <&$1; then
        zle -F $1
        exec {1}<&-
        return 1
    fi
    eval $line
    zle -R
}
zle -N _zlf_handler
# }}}
# }}}
# zoxide{{{
eval "$(zoxide init zsh)"
alias cd='z'
export _ZO_FZF_OPTS="
--tmux top,30%
--preview 'eza --color=always --width \$FZF_PREVIEW_COLUMNS --only-files --sort name --icons --all {2}'
--bind 'ctrl-d:preview-half-page-down'
--bind 'ctrl-u:preview-half-page-up'
"
# }}}
# sqlite{{{
export PATH="$(brew --prefix)/opt/sqlite/bin:$PATH"
# }}}
# fzf{{{
source <(fzf --zsh)
export FZF_DEFAULT_COMMAND='fd --type f --hidden'
export FZF_DEFAULT_OPTS="
--height 40%
--layout reverse
--border top
--bind 'ctrl-d:preview-half-page-down'
--bind 'ctrl-u:preview-half-page-up'
"
export FZF_CTRL_R_OPTS="
--bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort'
--color header:italic
--header 'Press CTRL-Y to copy command into clipboard'
"
export FZF_CTRL_T_OPTS="
--walker-skip .git,node_modules,target
--preview 'bat -n --color=always {}'
--bind 'ctrl-/:change-preview-window(down|hidden|)'
"
export FZF_ALT_C_OPTS="
--walker-skip .git,node_modules,target
--preview 'tree -C {}'
"
# }}}}}}
# Custom{{{
# Functions{{{
function search-aliases () {
  if (( $#argv )); then
    value="--value $argv[@]"
  else
    value=""
  fi
  alias |
    gum filter --select-if-one ${(z)value} |
    cut -d '=' -f 2 |
    read cmd
  if [[ -n "$cmd" ]]; then
    cmd=${cmd#[\']}
    cmd=${cmd%[\']}
    print -z "$cmd"
  fi
}

# tmuxp {{{
function tmuxp-edit-template() {
  local session="$(tmux display-message -p -F '#{session_name}')"
  local dir="${XDG_CONFIG_HOME:-$HOME/.config}/tmuxp"
  local file="$(fd "$session" --type f $dir | fzf --query="$session" --exit-0 --select-1)"
  if [[ -s $file ]]; then
    "${(z)VISUAL:-${(z)EDITOR}}" $file
  else
    gum log -l error "$file does not exist"
  fi
}

function tmuxp-create-template() {
  local dir="${XDG_CONFIG_HOME:-$HOME/.config}/tmuxp"
  local name
  if [[ -z $1 ]]; then
    name="$(gum input --header="What should we name it?")"
  else
    name="$1"
  fi
  "${(z)VISUAL:-${(z)EDITOR}}" "$dir/$name.yml"
}

function tmuxp-attach() {
  local name
  if [[ -z $1 ]]; then
    name="$(tmuxp ls | fzf)"
  else
    name="$1"
  fi
  if tmux has -t $name; then
    if [[ -n $TMUX ]]; then
      tmux switch-client -t $name
    else
      tmux attach -t $name
    fi
  else
    if [[ -n $TMUX ]]; then
      tmuxp load -d $name
      tmux switch-client -t $name
    else
      tmuxp load $name
    fi
  fi
}
# }}}
# }}}
# Aliases{{{

# Global{{{

alias -g P='| ${(z)PAGER}'
alias -g HP='--help 2>&1 | ${(z)PAGER}'
alias -g HF='--help 2>&1 | gum filter'
# }}}
# Suffix{{{

# }}}
# Normal{{{

alias brewh='brew home'
alias brewi='brew install'
alias brews='brew search'
alias brewx='brew uninstall'
alias caskh='brew home --cask'
alias caski='brew install --cask'
alias casks='brew search --cask'
alias caskx='brew uninstall --cask'
alias cm='chezmoi'
alias cma='chezmoi add'
alias cmap='chezmoi apply --interactive'
alias cmaP='chezmoi apply'
alias cmcd='chezmoi cd'
alias cme='chezmoi edit'
alias cmf='chezmoi forget --interactive'
alias cmew='chezmoi edit --watch'
alias cmm='chezmoi merge'
alias cmma='chezmoi merge-all'
alias cmr='chezmoi re-add --interactive'
alias cmR='chezmoi re-add'
alias cms='chezmoi status'
alias cmrm='chezmoi destroy --interactive'
alias e='${(z)VISUAL:-${(z)EDITOR}}'
alias gb='git branch'
alias gbv='git branch -v'
alias gcam='git commit -am'
alias gcm='git commit -m "$(gum write)"'
alias gco='git checkout'
alias gf='git fetch'
alias gfa='git fetch --all'
alias gfap='git fetch --all --prune'
alias gfm='git pull'
alias giA='git add -A'
alias gia='git status --porcelain | fzf --multi | awk '\''{ print $2 }'\'' | xargs -I {} git add {}'
alias gp='git push'
alias gpp='git pull && git push'
alias grc='git recommit'
alias gws='git status -s'
alias gwS='git status'
alias j='just'
alias l='lfcd'
alias lg='lazygit'
alias ls='eza --group-directories-first --icons'
alias pc='process-compose'
alias sa='search-aliases'
alias ssh-add-all='ssh-add --apple-use-keychain "$HOME"/.ssh/id_^*.pub'
alias sshc='sed -e '\''/^Host/!d'\'' -e '\''s/^Host //'\'' ~/.ssh/config | gum filter | read host; ssh $host'
alias tmux.conf='e ~/.config/tmux/tmux.conf'
alias tmuxa='tmux-control attach'
alias tmuxl='tmux-control list'
alias tmuxp
alias t='tmux'
alias tp='tmuxp'
alias tpa='tmuxp-attach'
alias tpc='tmuxp-create-template'
alias tpe='tmuxp-edit-template'
alias tx='tmux-control'
alias txa='tmuxa'
alias txe='tmux-control edit'
alias txl='tmuxl'
alias we='watchexec'
alias zshenv='e ~/.zshenv; exec zsh'
alias zlogin='e ~/.zlogin; exec zsh'
alias zprofile='e ~/.zprofile; exec zsh'
alias zshrc='e ~/.zshrc; exec zsh'
# }}}
# }}}
# }}}
